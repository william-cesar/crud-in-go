package logger

var JOURNEY = map[string]string{
	"DB":                  "DB CONNECTION",
	"SERVER":              "SERVER",
	"ACTIVATE":            "USER ACTIVATION",
	"AUTH":                "AUTHENTICATION",
	"ACTIVATE_CONTROLLER": "ACTIVATE USER - CONTROLLER",
	"CREATE_CONTROLLER":   "CREATE USER - CONTROLLER",
	"UPDATE_CONTROLLER":   "UPDATE USER - CONTROLLER",
	"DELETE_CONTROLLER":   "DELETE USER - CONTROLLER",
	"FIND_CONTROLLER":     "FIND USER - CONTROLLER",
	"LOGIN_CONTROLLER":    "LOGIN - CONTROLLER",
	"ACTIVATE_SERVICE":    "ACTIVATE USER - SERVICE",
	"CREATE_SERVICE":      "CREATE USER - SERVICE",
	"UPDATE_SERVICE":      "UPDATE USER - SERVICE",
	"DELETE_SERVICE":      "DELETE USER - SERVICE",
	"FIND_SERVICE":        "FIND USER - SERVICE",
	"LOGIN_SERVICE":       "LOGIN - SERVICE",
	"ACTIVATE_REPOSITORY": "ACTIVATE USER - REPOSITORY",
	"CREATE_REPOSITORY":   "CREATE USER - REPOSITORY",
	"UPDATE_REPOSITORY":   "UPDATE USER - REPOSITORY",
	"DELETE_REPOSITORY":   "DELETE USER - REPOSITORY",
	"FIND_REPOSITORY":     "FIND USER - REPOSITORY",
	"LOGIN_REPOSITORY":    "LOGIN - REPOSITORY",
}

var MESSAGE = map[string]map[string]string{
	"INIT": {
		"DB":               "Initializing DB connection",
		"SERVER":           "Initializing server",
		"EMAIL":            "Initializing email service",
		"TEMPLATE":         "Initializing email template",
		"SEND":             "Initializing email sending",
		"TOKEN_VERIFY":     "Initializing JWT token verification",
		"TOKEN_GENERATION": "Initializing JWT token generation",
		"AUTH":             "Initializing authentication",
		"ACTIVATION":       "Initializing user activation",
		"CREATION":         "Initializing user creation",
		"DELETION":         "Initializing user deletion",
		"FIND_ID":          "Initializing user search by id",
		"FIND_EMAIL":       "Initializing user search by email",
		"FIND_EMAIL_PASS":  "Initializing user search by email and password",
		"UPDATE":           "Initializing user update",
		"LOGIN":            "Initializing user login",
	},
	"ERROR": {
		"DB_CONN":          "Could not establish connection to DB",
		"DB_PING":          "Could not ping DB",
		"LOAD_ENV":         "Could not load .env file",
		"SERVER":           "Could not start server",
		"SEND_EMAIL":       "Could not send activation email",
		"TOKEN_SIGNATURE":  "Could not verify token signature",
		"TOKEN_VALIDITY":   "Could not verify token validity",
		"TOKEN_GENERATION": "Could not generate token",
		"TOKEN_VERIFY":     "Could not verify token",
		"INVALID_TOKEN":    "Invalid token",
		"NO_TOKEN":         "No token provided",
		"INVALID_ID":       "Invalid user id",
		"INVALID_REQ":      "Invalid request",
		"NO_USER":          "User not found with given credentials",
		"REQ_BODY":         "Could not read request body",
		"UNMARSHAL":        "Could not unmarshal request body",
		"ACTIVATION":       "Could not activate user",
		"ACTIVE":           "User is not activated",
		"CREATION":         "Could not create user",
		"DELETION":         "Could not delete user",
		"UPDATE":           "Could not update user",
		"UNIQUE":           "User already exists",
	},
	"WARN": {
		"ACTIVE": "User already activated",
	},
	"OK": {
		"DB_CONN":          "Connected to MongoDB",
		"ACTIVE":           "User activated successfully",
		"SENT":             "Email sent successfully",
		"TEMPLATE":         "Template generated successfully",
		"TOKEN_VERIFY":     "Token verified successfully",
		"TOKEN_GENERATION": "Token generated successfully",
		"AUTH":             "User authenticated successfully",
		"CREATED":          "User created successfully",
		"DELETED":          "User deleted successfully",
		"FOUND":            "User found",
		"UPDATED":          "User updated successfully",
		"LOGGED":           "User logged in successfully",
	},
}
